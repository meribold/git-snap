#!/usr/bin/env bash

snapshot_branch=snapshots-$USER-$HOSTNAME

if ! HEAD=$(git symbolic-ref HEAD); then
   exit
fi

if ! index=$(mktemp); then
   exit
fi

git diff --staged > "$index"

# See [1].
sco() {
   git symbolic-ref HEAD "$1"
}

sco "refs/heads/$snapshot_branch" || exit

# Use a trap to make sure we restore HEAD and the index no matter what.
cleanup() {
   sco "$HEAD"
   # Restore the index.  "[W]ith the --cached option the patch is only applied to the
   # index." (git-apply(1))
   git apply --cached "$index"
   rm "$index"
}
trap cleanup EXIT

# This will also commit new files that are already staged.  I think that's good.
git commit --no-verify -am Snapshot$'\n\n'"This is a snapshot of my current working tree."

# [1]: https://stackoverflow.com/q/6070179
#      "Switching branches without touching the working tree?"
# [2]: https://github.com/qw3rtman/git-fire
